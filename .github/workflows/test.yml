name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }}
    runs-on: ubuntu-20.04
    env:
      FORCE_COLOR: "1"
      MIX_ENV: test
    services:
      postgres:
        image: postgres
        ports:
        - 5432:5432
        env:
          POSTGRES_DB: paginator_test
          POSTGRES_PASSWORD: postgres
    strategy:
      fail-fast: false
      matrix:
        elixir:
        - "1.12"
        - "1.13.4"
        - "1.14.5"
        - "1.15"
        - "1.16"
        otp:
        - "23.0"
        - "24.0"
        - "25.0"
        - "26.0"
        include:
         - elixir: "1.12"
           otp: "23.0"
           lint: true
        exclude:
        - elixir: "1.12"
          otp: "25.0"
        - elixir: "1.12"
          otp: "26.0"
        - elixir: "1.13.4"
          otp: "26.0"
        - elixir: "1.15"
          otp: "23.0"
        - elixir: "1.16"
          otp: "23.0"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore build and deps caches
      uses: actions/cache@v2
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-deps-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-deps-${{ matrix.otp }}-${{ matrix.elixir }}

    - run: mix deps.get
    - run: mix deps.unlock --check-unused
    - run: mix compile --warn-as-errors
      if: ${{ matrix.lint }}
    - run: mix test

    # Cache key based on Erlang/Elixir version and the mix.lock hash
    - name: Restore PLT cache
      if: ${{ matrix.lint }}
      id: plt_cache
      uses: actions/cache/restore@v3
      with:
        key: |
          plt-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          plt-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-
        path: |
          priv/plts

    # Create PLTs if no cache was found
    - name: Create PLTs
      if: (steps.plt_cache.outputs.cache-hit != 'true') && (matrix.lint)
      run: mix dialyzer --plt
      env:
        MIX_ENV: dev

    # By default, the GitHub Cache action will only save the cache if all steps in the job succeed,
    # so we separate the cache restore and save steps in case running dialyzer fails.
    - name: Save PLT cache
      id: plt_cache_save
      uses: actions/cache/save@v3
      if: (steps.plt_cache.outputs.cache-hit != 'true') && (matrix.lint)
      with:
        key: |
          plt-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        path: |
          priv/plts

    - run: mix dialyzer --format github
      env:
        MIX_ENV: dev
      if: ${{ matrix.lint }}
